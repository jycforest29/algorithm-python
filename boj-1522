백준 1522
유형 : 투포인터 알고리즘
해설 : 이 문제는 a를 모두 연속으로 만드는 것이 항상 가능하기 때문에 이를 전제로 깔고 언제 a가 가장 길게 연속되었는지 찾아야 함. 이는 여집합의 관점에서 보면, a가 모두 연속되었다고 가정했을 때, 여기에 끼어드는 b가 가장 작은 구간을 찾아야 함. 따라서 이를 위해 완전 탐색을 해야하므로 투포인터 알고리즘 사용함.

<python 코드> 
import sys
input = sys.stdin.readline

inputs = input().rstrip()

a_cnt = inputs.count('a') 
ans = 1001 
for i in range(len(inputs)): # 전체 탐색 
    if i+a_cnt >= len(inputs): 
        circular = (i+a_cnt) % len(inputs) # 순환 조건 사용 
        t = inputs[i:len(inputs)] + inputs[0:circular]
    else:
        t = inputs[i:i+a_cnt]
    b_cnt = t.count('b')
    ans = min(ans, b_cnt) # start = i, end = i + a_cnt로 고정된 구간에서 b의 개수가 최소여야 함
print(ans)


