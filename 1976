유형 : 유니온 파인드
	유니온 파인드 : 그래프 알고리즘으로 두 노드가 같은 그래프에 속하는지 판별하는 알고리즘임. 노드를 합치는 유니온 알고리즘과 부모를 찾는 find 알고리즘을 사용해 서로소 집합을 찾아낸다.

해설 : 같은 집합에 속하는지를 알아내는 문제와 동일함. 전형적인 유니온 파인드 문제임.
풀이 :
import sys
input = sys.stdin.readline

N = int(input())
M = int(input())
board = [list(map(int, input().split())) for _ in range(N)]
roads = list(range(N)) # 부모를 자기 자신으로 초기화함 
plan = list(map(int, input().split()))

def find(a):
    if roads[a] != a: # 루트 노드가 아니라면 루트 노드를 찾을때까지 호출
        roads[a] = find(roads[a])
    return roads[a]

def union(a, b): # 루트 노드기준으로 노드 집합으로 분리
    a = find(a)
    b = find(b)
    if a > b:
        roads[a] = b
    else:
        roads[b] = a

for i in range(N):
    for j in range(N):
        if board[i][j] == 1: # 서로소 집합 확인과정의 입력값
            union(i, j)
ans = "YES"
for i in range(1, M):
    if roads[plan[i]-1] != roads[plan[0]-1]: # 서로소 집합 통해 연결성 확인
        ans = "NO"
        break
print(ans)
