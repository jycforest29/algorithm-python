해설 : 플로이드 워셜 특성상 dp 테이블 값의 범위를 설정해야 함
플로이드 워셜? 모든 최단 경로를 구하는 알고리즘임. 다익스트라는 하나의 정점에서 다른 모든 정점까지의 최단 거리를 구하는 알고리즘이었다면, 플로이드 워셜은 한번 실행하여 모든 노드 간 최단 경로를 구할 수 잇음.
이는 이차원 인접 행렬을 구성하여 라운드마다 최소값을 갱신하는 형태로 진행됨. 시간복잡도는 O(n**3)로 그래프의 크기가 작을때만 사용 가능함. 
해설 : 정석적인 문제라 따로 해설 안씀.
import sys
input = sys.stdin.readline
INF = float('inf')

n = int(input())
m = int(input())
dp = [[INF for _ in range(n+1)] for _ in range(n+1)]
for i in range(m):
    start, end, cost = map(int, input().split())
    dp[start][end] = min(dp[start][end], cost)

for k in range(1, n+1):
    for i in range(1, n+1):
        for j in range(1, n+1):
            if i == j:
                dp[i][j] = 0
                continue
            dp[i][j] = min(dp[i][j], dp[i][k]+dp[k][j])

for i in range(1, n+1):
    for j in range(1, n+1):
        if dp[i][j] == INF:
            print('0', end = ' ')
            continue
        print(f'{dp[i][j]}', end = ' ')
    print()

