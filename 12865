백준 12865
유형 : 다이나믹 프로그래밍 
해설 : 구하는 것은 K이하일 때 최대 V. 따라서 dp 테이블을 dp[w]는 무게 i만큼의 물건을 넣었을 때 최대 v로 만들면 dp[k]가 구하고자 하는 값임. 따라서 입력으로 들어오는 무게를 추가하려면 우선 해당 물건을 담을 수 있어야 하고, 담았을 때의 가치가 더 커야한다는 조건이 존재하므로 이를 코드로 구현하면 아래와 같음.
  
<python 코드> # 내 풀이 아니고 다른 사람들의 풀이 참고함
import sys

n, k = map(int, sys.stdin.readline().split())
inputs = [입력]
dp = [0]*(k+1) # dp[k]의 값이 구하고자 하는 값임
for i in range(n):
    w, v = inputs[i] # dp[w] = v
    for j in range(k, w-1, -1): # <해당 물건을 담을 수 있어야> 
        dp[j] = max(dp[j], dp[j-w]+v) # <담았을 때의 가치가 더 커야>  

print(dp[k])
