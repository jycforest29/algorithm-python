유형: 다이나믹 프로그래밍
해설:
풀이:
import sys
from itertools import permutations
input = sys.stdin.readline

def f(x, y, z, cnt):
    global ans
    if x <= 0 and y <= 0 and z <= 0:
        ans = min(ans, cnt)
        return
    
# 종료조건 처리 용이
    x = 0 if x <= 0 else x
    y = 0 if y <= 0 else y
    z = 0 if z <= 0 else z
    
    if dp[x][y][z] <= cnt and dp[x][y][z] != 0:
        return 

    dp[x][y][z] = cnt

    for i in permutations([9, 3, 1], 3):
        f(x-i[0], y-i[1], z-i[2], cnt + 1)

N = int(input())
scv = list(map(int, input().split()))
while len(scv) < 3: # 순열 처리 용이
    scv += [0]
dp = [[[100]*(max(scv)+1) for i in range((max(scv)+1))] for j in range((max(scv)+1))] # 남아있는 체력의 최대값을 기준으로 삼중배열 생성
ans = 100
f(scv[0], scv[1], scv[2], 0)
print(ans)

